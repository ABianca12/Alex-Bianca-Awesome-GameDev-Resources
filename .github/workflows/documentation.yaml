name: Documentation

on:
  push:
    branches:
      - master
      - main
env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    name: Build and publish documentation
    container: emscripten/emsdk
    runs-on: ubuntu-latest
    steps:
      - run: git config --global --add safe.directory '*'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
#          lfs: true

      - uses: actions/cache@v2
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - name: APT Update
        run: apt update

      - name: Install dependencies
        run: |
          sudo apt-get install -y doxygen gource libgs-dev
          pip install git+https://${{ secrets.GH_SQUID_TOKEN }}@github.com/squidfunk/mkdocs-material-insiders.git
          pip install jinja2 Pygments mkdocs mkdocs-same-dir mkdocs-minify-plugin mkdocs-redirects mkdocs-exclude mkdocs-git-committers-plugin-2 mkdocs-git-revision-date-localized-plugin mkdocs-with-pdf beautifulsoup4==4.9.3
          npm install 

      - name: Configure
        run: emcmake cmake -S. -Bbuild -DENABLE_TEST_COVERAGE=OFF -DENABLE_STANDALONE=ON -DENABLE_DOCUMENTATION=ON

#      - name: Build Docs
#        run: cmake --build build --target GenerateDocs
#
#      - name: Build Emscripten
#        run: cmake --build build -j4 --config Release

      - name: mkdocs
        run: CI=1 mkdocs build

      - name: COPY CNAME
        run: cp CNAME ./site

#      - name: Copy Emscripten build to docs
#        run: cp -R build/out/* build/documentation/doxygen/html/

      - name: Publish
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 19.0.2
          # You can specify specifying version range for the extra plugins if you prefer.
          extra_plugins: |
            @semantic-release/changelog@6.0.2
            @semantic-release/git@10.0.1
            @semantic-release/commit-analyzer@9.0.2
            @semantic-release/github@8.0.7
            @semantic-release/npm@9.0.1
            @semantic-release/release-notes-generator@10.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Version
        id: version
        run: |
          if [[ ${{ steps.semantic.outputs.new_release_published }} == true ]]
          then     
            export version=v${{ steps.semantic.outputs.new_release_version }}
          else
            export version=`git describe --abbrev=0 --tags $tag`
          fi
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Latest pdf
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' #|| startsWith(github.ref, 'refs/tags')
        with:
          allowUpdates: true
          artifacts: site/pdf/document.pdf
          tag: latest

      - name: Versined pdf
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' #|| startsWith(github.ref, 'refs/tags')
        with:
          allowUpdates: true
          artifacts: site/pdf/document.pdf
          tag: ${{ steps.version.outputs.version }}